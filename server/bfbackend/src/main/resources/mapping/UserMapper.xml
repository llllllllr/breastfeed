<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lllr.test.breast.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="lllr.test.breast.dataObject.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="credit_id" jdbcType="VARCHAR" property="creditId" />
    <result column="pregnant_type" jdbcType="INTEGER" property="pregnantType" />
    <result column="pregnant_week" jdbcType="VARCHAR" property="pregnantWeek" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="confinement_date" jdbcType="DATE" property="confinementDate" />
    <result column="confinement_week" jdbcType="INTEGER" property="confinementWeek" />
    <result column="confinement_type" jdbcType="INTEGER" property="confinementType" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_token" jdbcType="CHAR" property="userToken" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, age, credit_id, pregnant_type, pregnant_week, job, confinement_date, confinement_week, 
    confinement_type, user_name, user_password, user_token
  </sql>
  <select id="selectByExample" parameterType="lllr.test.breast.dataObject.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="lllr.test.breast.dataObject.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lllr.test.breast.dataObject.User">
    insert into user (user_id, age, credit_id, 
      pregnant_type, pregnant_week, job, 
      confinement_date, confinement_week, confinement_type, 
      user_name, user_password, user_token
      )
    values (#{userId,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{creditId,jdbcType=VARCHAR}, 
      #{pregnantType,jdbcType=INTEGER}, #{pregnantWeek,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{confinementDate,jdbcType=DATE}, #{confinementWeek,jdbcType=INTEGER}, #{confinementType,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userToken,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="lllr.test.breast.dataObject.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="creditId != null">
        credit_id,
      </if>
      <if test="pregnantType != null">
        pregnant_type,
      </if>
      <if test="pregnantWeek != null">
        pregnant_week,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="confinementDate != null">
        confinement_date,
      </if>
      <if test="confinementWeek != null">
        confinement_week,
      </if>
      <if test="confinementType != null">
        confinement_type,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userToken != null">
        user_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="creditId != null">
        #{creditId,jdbcType=VARCHAR},
      </if>
      <if test="pregnantType != null">
        #{pregnantType,jdbcType=INTEGER},
      </if>
      <if test="pregnantWeek != null">
        #{pregnantWeek,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="confinementDate != null">
        #{confinementDate,jdbcType=DATE},
      </if>
      <if test="confinementWeek != null">
        #{confinementWeek,jdbcType=INTEGER},
      </if>
      <if test="confinementType != null">
        #{confinementType,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        #{userToken,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lllr.test.breast.dataObject.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.creditId != null">
        credit_id = #{record.creditId,jdbcType=VARCHAR},
      </if>
      <if test="record.pregnantType != null">
        pregnant_type = #{record.pregnantType,jdbcType=INTEGER},
      </if>
      <if test="record.pregnantWeek != null">
        pregnant_week = #{record.pregnantWeek,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.confinementDate != null">
        confinement_date = #{record.confinementDate,jdbcType=DATE},
      </if>
      <if test="record.confinementWeek != null">
        confinement_week = #{record.confinementWeek,jdbcType=INTEGER},
      </if>
      <if test="record.confinementType != null">
        confinement_type = #{record.confinementType,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userToken != null">
        user_token = #{record.userToken,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      credit_id = #{record.creditId,jdbcType=VARCHAR},
      pregnant_type = #{record.pregnantType,jdbcType=INTEGER},
      pregnant_week = #{record.pregnantWeek,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      confinement_date = #{record.confinementDate,jdbcType=DATE},
      confinement_week = #{record.confinementWeek,jdbcType=INTEGER},
      confinement_type = #{record.confinementType,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_token = #{record.userToken,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lllr.test.breast.dataObject.User">
    update user
    <set>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="creditId != null">
        credit_id = #{creditId,jdbcType=VARCHAR},
      </if>
      <if test="pregnantType != null">
        pregnant_type = #{pregnantType,jdbcType=INTEGER},
      </if>
      <if test="pregnantWeek != null">
        pregnant_week = #{pregnantWeek,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="confinementDate != null">
        confinement_date = #{confinementDate,jdbcType=DATE},
      </if>
      <if test="confinementWeek != null">
        confinement_week = #{confinementWeek,jdbcType=INTEGER},
      </if>
      <if test="confinementType != null">
        confinement_type = #{confinementType,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        user_token = #{userToken,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="lllr.test.breast.dataObject.User">
    update user
    set age = #{age,jdbcType=INTEGER},
      credit_id = #{creditId,jdbcType=VARCHAR},
      pregnant_type = #{pregnantType,jdbcType=INTEGER},
      pregnant_week = #{pregnantWeek,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      confinement_date = #{confinementDate,jdbcType=DATE},
      confinement_week = #{confinementWeek,jdbcType=INTEGER},
      confinement_type = #{confinementType,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="lllr.test.breast.dataObject.user.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="credit_id" jdbcType="VARCHAR" property="creditId" />
    <result column="pregnant_type" jdbcType="INTEGER" property="pregnantType" />
    <result column="pregnant_week" jdbcType="VARCHAR" property="pregnantWeek" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="confinement_date" jdbcType="DATE" property="confinementDate" />
    <result column="confinement_week" jdbcType="INTEGER" property="confinementWeek" />
    <result column="confinement_type" jdbcType="INTEGER" property="confinementType" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_token" jdbcType="CHAR" property="userToken" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, age, credit_id, pregnant_type, pregnant_week, job, confinement_date, confinement_week, 
    confinement_type, user_name, user_password, user_token
  </sql>
  <select id="selectByExample" parameterType="lllr.test.breast.dataObject.user.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="lllr.test.breast.dataObject.user.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lllr.test.breast.dataObject.user.User">
    insert into user (user_id, age, credit_id, 
      pregnant_type, pregnant_week, job, 
      confinement_date, confinement_week, confinement_type, 
      user_name, user_password, user_token
      )
    values (#{userId,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{creditId,jdbcType=VARCHAR}, 
      #{pregnantType,jdbcType=INTEGER}, #{pregnantWeek,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, 
      #{confinementDate,jdbcType=DATE}, #{confinementWeek,jdbcType=INTEGER}, #{confinementType,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userToken,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="lllr.test.breast.dataObject.user.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="creditId != null">
        credit_id,
      </if>
      <if test="pregnantType != null">
        pregnant_type,
      </if>
      <if test="pregnantWeek != null">
        pregnant_week,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="confinementDate != null">
        confinement_date,
      </if>
      <if test="confinementWeek != null">
        confinement_week,
      </if>
      <if test="confinementType != null">
        confinement_type,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userToken != null">
        user_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="creditId != null">
        #{creditId,jdbcType=VARCHAR},
      </if>
      <if test="pregnantType != null">
        #{pregnantType,jdbcType=INTEGER},
      </if>
      <if test="pregnantWeek != null">
        #{pregnantWeek,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="confinementDate != null">
        #{confinementDate,jdbcType=DATE},
      </if>
      <if test="confinementWeek != null">
        #{confinementWeek,jdbcType=INTEGER},
      </if>
      <if test="confinementType != null">
        #{confinementType,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        #{userToken,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="lllr.test.breast.dataObject.user.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.creditId != null">
        credit_id = #{record.creditId,jdbcType=VARCHAR},
      </if>
      <if test="record.pregnantType != null">
        pregnant_type = #{record.pregnantType,jdbcType=INTEGER},
      </if>
      <if test="record.pregnantWeek != null">
        pregnant_week = #{record.pregnantWeek,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.confinementDate != null">
        confinement_date = #{record.confinementDate,jdbcType=DATE},
      </if>
      <if test="record.confinementWeek != null">
        confinement_week = #{record.confinementWeek,jdbcType=INTEGER},
      </if>
      <if test="record.confinementType != null">
        confinement_type = #{record.confinementType,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPassword != null">
        user_password = #{record.userPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.userToken != null">
        user_token = #{record.userToken,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      age = #{record.age,jdbcType=INTEGER},
      credit_id = #{record.creditId,jdbcType=VARCHAR},
      pregnant_type = #{record.pregnantType,jdbcType=INTEGER},
      pregnant_week = #{record.pregnantWeek,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      confinement_date = #{record.confinementDate,jdbcType=DATE},
      confinement_week = #{record.confinementWeek,jdbcType=INTEGER},
      confinement_type = #{record.confinementType,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_password = #{record.userPassword,jdbcType=VARCHAR},
      user_token = #{record.userToken,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lllr.test.breast.dataObject.user.User">
    update user
    <set>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="creditId != null">
        credit_id = #{creditId,jdbcType=VARCHAR},
      </if>
      <if test="pregnantType != null">
        pregnant_type = #{pregnantType,jdbcType=INTEGER},
      </if>
      <if test="pregnantWeek != null">
        pregnant_week = #{pregnantWeek,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="confinementDate != null">
        confinement_date = #{confinementDate,jdbcType=DATE},
      </if>
      <if test="confinementWeek != null">
        confinement_week = #{confinementWeek,jdbcType=INTEGER},
      </if>
      <if test="confinementType != null">
        confinement_type = #{confinementType,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userToken != null">
        user_token = #{userToken,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="lllr.test.breast.dataObject.user.User">
    update user
    set age = #{age,jdbcType=INTEGER},
      credit_id = #{creditId,jdbcType=VARCHAR},
      pregnant_type = #{pregnantType,jdbcType=INTEGER},
      pregnant_week = #{pregnantWeek,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      confinement_date = #{confinementDate,jdbcType=DATE},
      confinement_week = #{confinementWeek,jdbcType=INTEGER},
      confinement_type = #{confinementType,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_token = #{userToken,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>