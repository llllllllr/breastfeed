<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lllr.test.breast.dao.mapper.AdministratorMapper">
  <resultMap id="BaseResultMap" type="lllr.test.breast.dataObject.user.Administrator">
    <id column="administrator_id" jdbcType="INTEGER" property="administratorId" />
    <result column="administrator_name" jdbcType="VARCHAR" property="administratorName" />
    <result column="administrator_password" jdbcType="VARCHAR" property="administratorPassword" />
    <result column="administrator_right" jdbcType="INTEGER" property="administratorRight" />
    <result column="administrator_token" jdbcType="CHAR" property="administratorToken" />
  </resultMap>
  <sql id="Base_Column_List">
    administrator_id, administrator_name, administrator_password, administrator_right, 
    administrator_token
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from administrator
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from administrator
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="lllr.test.breast.dataObject.user.Administrator">
    insert into administrator (administrator_id, administrator_name, 
      administrator_password, administrator_right, 
      administrator_token)
    values (#{administratorId,jdbcType=INTEGER}, #{administratorName,jdbcType=VARCHAR}, 
      #{administratorPassword,jdbcType=VARCHAR}, #{administratorRight,jdbcType=INTEGER}, 
      #{administratorToken,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="lllr.test.breast.dataObject.user.Administrator">
    insert into administrator
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="administratorId != null">
        administrator_id,
      </if>
      <if test="administratorName != null">
        administrator_name,
      </if>
      <if test="administratorPassword != null">
        administrator_password,
      </if>
      <if test="administratorRight != null">
        administrator_right,
      </if>
      <if test="administratorToken != null">
        administrator_token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="administratorId != null">
        #{administratorId,jdbcType=INTEGER},
      </if>
      <if test="administratorName != null">
        #{administratorName,jdbcType=VARCHAR},
      </if>
      <if test="administratorPassword != null">
        #{administratorPassword,jdbcType=VARCHAR},
      </if>
      <if test="administratorRight != null">
        #{administratorRight,jdbcType=INTEGER},
      </if>
      <if test="administratorToken != null">
        #{administratorToken,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="lllr.test.breast.dataObject.user.Administrator">
    update administrator
    <set>
      <if test="administratorName != null">
        administrator_name = #{administratorName,jdbcType=VARCHAR},
      </if>
      <if test="administratorPassword != null">
        administrator_password = #{administratorPassword,jdbcType=VARCHAR},
      </if>
      <if test="administratorRight != null">
        administrator_right = #{administratorRight,jdbcType=INTEGER},
      </if>
      <if test="administratorToken != null">
        administrator_token = #{administratorToken,jdbcType=CHAR},
      </if>
    </set>
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="lllr.test.breast.dataObject.user.Administrator">
    update administrator
    set administrator_name = #{administratorName,jdbcType=VARCHAR},
      administrator_password = #{administratorPassword,jdbcType=VARCHAR},
      administrator_right = #{administratorRight,jdbcType=INTEGER},
      administrator_token = #{administratorToken,jdbcType=CHAR}
    where administrator_id = #{administratorId,jdbcType=INTEGER}
  </update>

  <select id="selectByAdministratorToken" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from administrator
    where administrator_token = #{administratorToken,jdbcType=CHAR}
  </select>
  <select id="selectByAdministratorName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from administrator
    where administrator_name = #{administratorName,jdbcType=VARCHAR}
  </select>

</mapper>